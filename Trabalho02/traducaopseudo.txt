func(IM_binaria) // gera matriz 0 chama funcao componentes
{ 
cont=0
Rows, Cols = size(IM_entrada);
Marcados = new zeroedMatrix(Rows, Cols)
return components(IM_binaria, Marcados, Rows, Cols, cont);
...
}

components(IM_binaria , Marcados, Rows, Cols, cont)// passa por todos os valores, chama funcao search e retorna o numero de componentens conexos
{ 
for L:=0 to Rows-1
for C:= 0 to Cols-1
if (Im_ binaria[L,C] == 1 && Marcados[L,C] == 0)
{ 
search(IM_binaria, Marcados, L, C);
cont++; // número de componentes conexos
}
retorna cont;
}

void search(IM_binaria, Marcados, L,C)
{ 
Marcados[L,C]:=1;
Viz_4 := neighbours(L,C);
for each (L',C') in Viz_4
if(IM_binaria[L',C'] == 1 && Marcados[L’,C’] == 0)
search(IM_binaria,Marcados,L',C');
}

int *neighbours(L,C)
{ Viz_4= new
array(4*size(int,int));
Viz_4[0] := (L-1,C);
Viz_4[1] := (L,C+1);
Viz_4[2] := (L+1,C);
Viz_4[3] := (L,C-1);
return Viz_4;
}


0 0 1 1 0 0
0 0 0 1 0 0
0 0 0 1 0 1
0 0 0 0 0 0
